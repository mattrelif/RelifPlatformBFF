name: Build and Push Docker Image to AWS ECR

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.5

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./... -v

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Bump version and push tag
        id: bump_version
        run: |
          #!/bin/bash
          
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          
          IFS='.' read -r -a VERSION_PARTS <<< "$LATEST_TAG"
          
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          NEW_MINOR=$((MINOR + 1))
          
          NEW_TAG="$MAJOR.$NEW_MINOR.$PATCH"
          
          git tag $NEW_TAG
          git push origin $NEW_TAG
          
          echo "VERSION=$NEW_TAG" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to AWS ECR
        run: |
          #!/bin/bash
          
          # Obter o URL do ECR
          IMAGE_NAME=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/relif-platform-bff
          IMAGE_TAG=${{ env.VERSION }}

          # Construir a imagem Docker
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

          # Tag para latest
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest

          # Enviar a imagem Docker para o ECR
          docker push --all-tags $IMAGE_NAME
